//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Repo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ChatDataEntities : DbContext
    {
        public ChatDataEntities()
            : base("name=ChatDataEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UsersRoom> UsersRooms { get; set; }
    
        public virtual int InsertIntoMessages(string username, string roomname, string text)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var roomnameParameter = roomname != null ?
                new ObjectParameter("roomname", roomname) :
                new ObjectParameter("roomname", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertIntoMessages", usernameParameter, roomnameParameter, textParameter);
        }
    
        public virtual int InsertIntoRooms(string roomname)
        {
            var roomnameParameter = roomname != null ?
                new ObjectParameter("roomname", roomname) :
                new ObjectParameter("roomname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertIntoRooms", roomnameParameter);
        }
    
        public virtual int InsertIntoUsers(string username, string email, string password, string token, Nullable<bool> active)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertIntoUsers", usernameParameter, emailParameter, passwordParameter, tokenParameter, activeParameter);
        }
    
        public virtual int InsertRoomUser(Nullable<int> roomid, Nullable<int> userid)
        {
            var roomidParameter = roomid.HasValue ?
                new ObjectParameter("roomid", roomid) :
                new ObjectParameter("roomid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRoomUser", roomidParameter, useridParameter);
        }
    
        public virtual int JoinGroup(string username, string roomname)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var roomnameParameter = roomname != null ?
                new ObjectParameter("roomname", roomname) :
                new ObjectParameter("roomname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JoinGroup", usernameParameter, roomnameParameter);
        }
    
        public virtual int OutFromRoom(string username, string roomname)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var roomnameParameter = roomname != null ?
                new ObjectParameter("roomname", roomname) :
                new ObjectParameter("roomname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OutFromRoom", usernameParameter, roomnameParameter);
        }
    }
}
